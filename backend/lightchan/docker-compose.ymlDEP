version: "3.9"
   
services:
  db:
    restart: always
    image: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=dev-postgres
      - POSTGRES_USER=pixel
      - POSTGRES_PASSWORD=stardust
#    command: sh -c "./waitfor.sh db:5432 -- echo 'test'"
#    command: >
#      sh -c "psql -U postgres"
#     command: >
#    command: > 
#      sh -c "echo hello"
#  db_start: 
#    build: .
#    command: > 
#     sh -c 'echo "drop database if exists lightchan;" | docker exec -i dev-posgres psql -U postgres'
#    depends_on:
#     - db
  web:
    build: .
    restart: always
#    command: 
#      sh -c 
#    command: 
#       sh -c "echo hello"
    command: sh -c "./waitfor.sh db:5432 -- python3 manage.py runserver"
#    command: sh -c './waitfor.sh db:5432 -- ./test.sh'
#    command: >
#      sh -c "/code/wait.sh db:5423 -- python3 manage.py runserver 0.0.0.0:8001"
    volumes:
      - .:/code
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_NAME=dev-postgres
      - POSTGRES_USER=pixel
      - POSTGRES_PASSWORD=stardust
    depends_on:
      - db
#    healthcheck:
#      test: curl --fail http://localhost:8001 || exit 1
#      interval: 60s
#      retries: 5
#      start_period: 20s
#      timeout: 10s
#    healthcheck:
#      test: curl -sS http://127.0.0.1 || exit 1
#      interval: 5s
#      timeout: 10s
#      retries: 3
